class iToR:
    def __init__(self, n):
        self.num = n
        self.roman = ''
        
    def conv(self):
        convert = {1:'I',4:'IV',5: 'V',9: 'IX', 10: 'X', 40:'XL' , 50: 'L', 90: 'XC', 100: 'C', 400:'CD' ,500: 'D', 900: 'CM',1000: 'M'}
        
        n = self.num
        
        i = 1
        while(n != -1):
            digit = n%10
            placeValue = digit*i
            
            digToRoman = ''
            
            if digit<5:
                value = 5*i-placeValue
                
                if value == 1*i:
                    digToRoman += convert[placeValue]
                
                else:
                    digToRoman+=(digit*convert[i])
        
            elif digit>5:
                value = placeValue-5*i
                
                if value == 4*i:
                    digToRoman+=convert[placeValue]
                
                else:
                    digToRoman+=convert[5*i]
                    digToRoman += ((value//i)*convert[i])
                        
            else:
                digToRoman += convert[5*i]
                
            self.roman = digToRoman+self.roman
                        
            i*=10
            n//=10
            
            if n==0:
                n = -1

obj = iToR(1903)
obj.conv()
print(obj.roman)
